{"version":3,"sources":["bootstrap/dialog-base.ts","bootstrap/dialog-service.ts","bootstrap/alert-dialog.ts","bootstrap/dialogs.ts","app.ts","environment.ts","main.ts","bootstrap/dialog.ts","resources/index.ts"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { inject } from \"aurelia-framework\";\r\n\r\n@inject(Element)\r\nexport class DialogBase {\r\n    constructor(public element: Element) {\r\n        \r\n    }\r\n\r\n    close() {\r\n        var event = new CustomEvent(\"close\");\r\n        this.element.dispatchEvent(event);\r\n    }\r\n}","import { inject, Container, CompositionEngine, Controller, ViewSlot } from \"aurelia-framework\";\r\nimport { DialogBase } from './dialog-base';\r\n\r\n@inject(CompositionEngine, Container)\r\nexport class DialogService {\r\n    constructor(\r\n        private compositionEngine: CompositionEngine,\r\n        private container: Container) {\r\n\r\n    }\r\n\r\n    show<TDialog extends DialogBase>(viewModel: string, model?: any, \r\n        onCreated?: (dialog: TDialog) => void): Promise<TDialog> {\r\n        \r\n        var dialogDiv = document.createElement(\"div\");\r\n        var backdropDiv = document.createElement(\"div\");\r\n        backdropDiv.setAttribute(\"class\", \"modal-backdrop fade in\");\r\n\r\n        document.body.appendChild(dialogDiv);\r\n        document.body.appendChild(backdropDiv);\r\n\r\n        var instruction = {\r\n            model: model,\r\n            viewModel: viewModel,\r\n            container: this.container,\r\n            bindingContext: null,\r\n            viewResources: null,\r\n            viewSlot: new ViewSlot(dialogDiv, true)\r\n        };\r\n        \r\n        return this.compositionEngine.compose(instruction).then((controller: Controller) => {\r\n            return this.close<TDialog>(controller, dialogDiv, backdropDiv, onCreated);\r\n        });\r\n    }\r\n\r\n    private close<TDialog extends DialogBase>(controller: Controller, dialogDiv: HTMLDivElement,\r\n        backdropDiv: HTMLDivElement, onCreated?: (dialog: TDialog) => void): Promise<TDialog> {\r\n        \r\n        document.body.classList.toggle(\"modal-open\");\r\n\r\n        var view = controller.view;\r\n        var dialog = view.bindingContext as TDialog;\r\n\r\n        if (onCreated)\r\n            onCreated(dialog);\r\n\r\n        return new Promise<TDialog>((resolve, reject) => {\r\n            dialog.element.addEventListener(\"close\", () => {\r\n                document.body.classList.toggle(\"modal-open\");\r\n\r\n                dialogDiv.remove();\r\n                backdropDiv.remove();\r\n\r\n                view.unbind();\r\n                view.removeNodes(); \r\n\r\n                resolve(dialog);\r\n            });\r\n        });\r\n    }\r\n}","import { inject, bindable } from \"aurelia-framework\";\r\nimport { DialogBase } from \"./dialog-base\";\r\n\r\n@inject(Element)\r\nexport class AlertDialog extends DialogBase {\r\n    @bindable\r\n    message;\r\n    \r\n    activated(params: { message: string }) {\r\n        this.message = params.message; \r\n    }\r\n}","import { inject } from \"aurelia-framework\";\r\nimport { DialogService } from \"./dialog-service\";\r\nimport { AlertDialog } from \"./alert-dialog\";\r\n\r\n@inject(DialogService)\r\nexport class Dialogs {  \r\n    constructor(private dialogService: DialogService) {\r\n        \r\n    }\r\n    \r\n    showAlert(message: string) {\r\n        return this.dialogService.show<AlertDialog>(\"bootstrap/alert-dialog\", { message: message });\r\n    }\r\n}","import { inject } from \"aurelia-framework\";\nimport { Dialogs } from \"./bootstrap/dialogs\";\n\n@inject(Dialogs)\nexport class App {\n  message = 'Hello World!';\n  \n  constructor(private dialogs: Dialogs){\n    \n  }\n\n  showDialog() {\n    this.dialogs.showAlert(\"Hello world!\");\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n(<any>Promise).config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import { bindable, inject, customElement, View } from \"aurelia-framework\";\r\nimport { DialogBase } from \"./dialog-base\";\r\n\r\n@inject(Element)\r\n@customElement(\"bs-dialog\")\r\nexport class Dialog {\r\n    @bindable\r\n    title = \"\";\r\n\r\n    @bindable\r\n    showCloseButton = true;\r\n\r\n    @bindable\r\n    closeOnBackdrop = true;\r\n\r\n    dialog: DialogBase;\r\n\r\n    bind(view: any, myView: View) {\r\n        this.dialog = myView.bindingContext as DialogBase;\r\n    }\r\n\r\n    checkDismissClick(event: Event) {\r\n        if (this.closeOnBackdrop && event.srcElement.getAttribute(\"class\").indexOf(\"modal fade in\") !== -1)\r\n            this.dialog.close();\r\n    }\r\n}","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n"],"sourceRoot":"../src"}